start: "if" predicates "then" statements

predicates:   predicate
            | predicate "and" predicates    -> predicate_and
            | predicate "or" predicates     -> predicate_or           
            | NEGATION predicates

predicate:    variable 
            | variable comparison_operator variable 
            | predicate_statement comparison_operator variable

variable: NUMBER | IDENTIFIER

IDENTIFIER: /[a-zA-Z_][a-zA-Z0-9_]{0,254}/

comparison_operator: EQUALS | NOT_EQUAL | GREATER | GREATER_OR_EQUAL | LESS | LESS_OR_EQUAL

EQUALS: /equals?( to)?/ | /is equals? to/ | "="

NOT_EQUAL: /(isn't|doesn't|is not|does not) equal( to)?/

GREATER: /(is )?greater( than)?/ | ">" 

GREATER_OR_EQUAL: /(is )?greater or equals?( than)?/  | ">="

LESS: /(is )?less( than)?/ | "<"

LESS_OR_EQUAL: /(is )?less or equals?( than)?/ | "<="

predicate_statement: variable operator variable 

operator: PLUS | MINUS | MULTIPLY | DIVIDE | MODULO

PLUS: "+" | "plus"

MINUS: "-" | "minus"

MULTIPLY: "*" | "multiply" | "multiply by" | "times"

DIVIDE: "/" | /divided?/

MODULO: "modulo" | "mod" | "%"

NEGATION: "!" | "not"

statements: statement 
            | statement "and" statements -> join_statements

statement: declaration | assignment

declaration: "declare" IDENTIFIER /as( a)?/ IDENTIFIER

assignment: "set" IDENTIFIER /(equal to)|(as)/ variable | "set" IDENTIFIER /(equal to)|(as)/ predicate_statement

%import common.NUMBER
%import common.WS_INLINE

%ignore WS_INLINE